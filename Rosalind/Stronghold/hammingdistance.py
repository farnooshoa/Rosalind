def hamming_distance (s,t):

    distance = sum(c1 != c2 for c1, c2 in zip(s, t))

    return distance
s="GTTGGCAACTAGTTAAGCATTAGGCTAAGCACATGCCAGGTTCGCACCTATAGTCTCTTCACCGGAGCAAGCTCAGTCGTCGTACGTACTAATTAATCGGCGATGTTCGGTGAACCCGTTACGTGTATACGAGACGTGTTGACAGATATCACGTCGTGCTGTGCCCGACTTGTTCTTGACCTCTCAGAAATAACCCACAAACGCCAAGGATCTACTATGTATCTGTATAAGTCAATCCGAGCTACCTTTTATATACTCGACGGAGATCTCTACGGCGCCTGTTACTGGGATTTGTTGATCGTGACTCGGTAAGGCACCCCAGTGGCTGACCATGGCAATTGTAACCTAATCGCATAGAGGTGGTGTCCCCCATCCTCAAACGGTATCGGATCCGGCTTTCGTGTCGGCCCGTCTATTACACCGTTGTACGTATATAGGCGTAACTTCAAGCTGCCGCCGCAGAGGAGTGAGCGTACAACCGTTGGCAACCCCACGCCAGAACATGTCCAATAGCAGCCGACTGTGGGCCGTGCACCAGGAGTGAGATTCACGCATATGTGCATTCAATCCGTCCCAAATATCCCTATAAGGCACTTTCTCGTCTCCATAAGCATTGGGAGAAAGACGTGGAACGAACTATAGCTTAAACACCATATGACGAGTATGGTAGCAAGCTCCGTTGACATAGTCATCTACGTCAAAATCTCCGTCATAGTTGCGCAAGGCTGCCTTCAACATATTGGAACCGTGCGTCGACAGGCAGTGCGCACAACTGAGAAGGAAGATGCCAAAGCTCTTGCATGCGCAGTTATTGCATCCGCGGGCCACCAGAAGGAACGATACGTCAAGTCTTGAAGGCCTTGAAGTTGTGTAAACCAAGTGGTACCATTTGCCTGCGTAGAGTTCCACTAAGTCCTCTGGGCACAAGTCCTCCG"
t="GGTGGAAACACAATAATCATGAGTCCAGGCTGTTATCAGGTACGCTCCTTTCATGTTGTAACCTGCGGACTCGGAGGAGCTGTTCTGAGCTTGATACCCGCGACGATGGGCGCAGCCTTTAACTAGTGAACAGAAGTGTCAACTCATAGACCGTGGTCATCTACCCCACGACTGCCCGGCCTCTCTAGCAACAACGGCAAACGGCACACATTTAAACCGTATCGGATAATGCCTATAGGGTGAACACTCGTTATAATCATGGGTCAGCAGTGCGGAAAGCGTCAATCGACTAGGCTTAGTACGGTTCGTAATAATTCCCCATTGGCGGACAGCCACATGCGTCCTATATTTGTTGCGAGGCCCTCTACCCCTACGTCATTGGCCAATGACTTCTCCTCTCGCATAGGGCTATCGTTTACACCTTGATGGGCAACTCAACCTTATGTCTAAATGCGGATGCGGAGTCCGGCCCACACAAAATTTAGCCACGATTCACCAGTGGACGGCTGCGAGTAAGCGAACGTTGATGGTGCGATGGCAACGACCTCGATGGTTATCTCGGTCGAATGCCTTCATAATAACCCGCTTTACCACCGTATCATTATCGGAACGATAAGGATGTTATGACGGAACCGACCGTAACGTAATCAATGATTGATTAGTGAGTTTGGTACCGCAAGGGAAAAATGCAATTCCGAATACAAGTCCGCCTTATTATCTCAATTGTGCCAACGTTATCTACGAACTGTCCGAGTTCGTGTAGTGATCCAATGCCAAATGGGCCACTCGTAAACTCTAACGTGCCCGGTTACCCAGTTCGGGGGCCACCTGCACGATTTAAAGGTTCAGGCTATAGGGCCTTTGTCGCTTCCGAACCAAGCCGTACTTTTTGCCTAGGTAGGGTCTCTATAAGTTCACCGCGGTTTGGCCCATGC"
result = hamming_distance(s, t)
print(result)